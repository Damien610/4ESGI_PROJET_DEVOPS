name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  IMAGE_NAME: damiennerri/devops_serveur

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:10.11
        env:
          MARIADB_ROOT_PASSWORD: root
          MARIADB_DATABASE: ticketdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u root -proot"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20

    env:
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_USER: root
      DB_PASSWORD: root
      DB_NAME: ticketdb
      ADMIN_USER: admin
      ADMIN_PASSWORD: secret

    steps:
      - name:  Checkout
        uses: actions/checkout@v4

      - name:  Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name:  Install dependencies
        run: npm ci

      - name:  Lint
        run: npx eslint .

      - name:  Wait for MariaDB
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 -u root -proot --silent; then
              echo "✅ MariaDB is ready"
              break
            fi
            sleep 2
          done

      - name: 🗃️ Seed DB
        run: node seed.js

      - name: Unit Tests
        run: npm test -- --testPathPattern=validation

      - name: E2E Tests
        run: npm test -- --testPathPattern=e2e

  build_and_deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name:  Define image tag
        id: tag
        run: echo "value=${{ env.IMAGE_NAME }}:$(date +'%Y%m%d-%H%M')" >> $GITHUB_OUTPUT

      - name: Build & Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ steps.tag.outputs.value }}

      - name: Local Deploy
        run: |
          docker compose pull
          docker compose up -d --remove-orphans
      
