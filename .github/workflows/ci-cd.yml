name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:10.11
        env:
          MARIADB_ROOT_PASSWORD: root
          MARIADB_DATABASE: ticketdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u root -proot"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=10

    env:
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_USER: root
      DB_PASSWORD: root
      DB_NAME: ticketdb
      ADMIN_USER: admin
      ADMIN_PASSWORD: secret

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧼 Lint with ESLint
        run: npx eslint .

      - name: ⏳ Wait for MariaDB to be ready
        run: |
          echo "Attente de MariaDB..."
          for i in {1..30}; do
            if mysqladmin ping -h "$DB_HOST" -u "$DB_USER" -p"$DB_PASSWORD" --silent; then
              echo "✅ MariaDB est prête !"
              break
            fi
            echo "⏳ En attente... ($i)"
            sleep 2
          done

      - name: 🗃️ Seed database
        run: node seed.js

      - name: ✅ Run unit tests
        run: npm test -- --testPathPattern=validation

      - name: 🚀 Run E2E tests
        run: npm test -- --testPathPattern=e2e

  build:
    needs: test
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🏗️ Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: yourdockerhubusername/ticket-app:latest
